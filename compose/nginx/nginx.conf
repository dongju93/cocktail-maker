# default nginx.conf
# user  nginx;
# worker_processes  auto;

# error_log  /var/log/nginx/error.log notice;
# pid        /run/nginx.pid;


# events {
#     worker_connections  1024;
# }


# http {
#     include       /etc/nginx/mime.types;
#     default_type  application/octet-stream;

#     log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
#                       '$status $body_bytes_sent "$http_referer" '
#                       '"$http_user_agent" "$http_x_forwarded_for"';

#     access_log  /var/log/nginx/access.log  main;

#     sendfile        on;
#     #tcp_nopush     on;

#     keepalive_timeout  65;

#     #gzip  on;

#     include /etc/nginx/conf.d/*.conf;
# }

user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log notice;
pid        /run/nginx.pid;

events {
    use epoll;
    worker_connections 1024;
}

http {
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    access_log  /var/log/nginx/access.log  main;

    # performance
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;

    # timeouts
    keepalive_timeout 65;

    # response types
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # size limits
    client_max_body_size 10M;

    # compression
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_types application/javascript application/x-javascript text/css text/xml text/plain text/less;
    gzip_min_length 1000;

    # reverse proxy
    upstream cocktail-maker {
        server cocktail-maker:8000;
    }

    server {
        listen 443 ssl;
        server_name cocktail-maker;

        ssl_certificate /etc/nginx/certs/cert.crt;
        ssl_certificate_key /etc/nginx/certs/priv.key;

        location / {
            proxy_pass http://cocktail-maker;
            proxy_set_header Host $host;
            proxy_set_header Forwarded $proxy_add_x_forwarded_for;
        }
    }
}