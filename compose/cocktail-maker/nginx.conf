# default nginx.conf
# user  nginx;
# worker_processes  auto;

# error_log  /var/log/nginx/error.log notice;
# pid        /run/nginx.pid;

# events {
#     worker_connections  1024;
# }
# http {
#     include       /etc/nginx/mime.types;
#     default_type  application/octet-stream;
#     log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
#                       '$status $body_bytes_sent "$http_referer" '
#                       '"$http_user_agent" "$http_x_forwarded_for"';
#     access_log  /var/log/nginx/access.log  main;
#     sendfile        on;
#     #tcp_nopush     on;
#     keepalive_timeout  65;
#     #gzip  on;
#     include /etc/nginx/conf.d/*.conf;
# }
user nginx;
worker_processes auto;

error_log /var/log/nginx/error.log notice;
pid /run/nginx.pid;

events {
    use epoll;
    worker_connections 1024;
}

http {
    # 변수 선언
    map $host $cors_origin {
        default "http://localhost:3000";
    }

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
    '$status $body_bytes_sent "$http_referer" '
    '"$http_user_agent" "$http_x_forwarded_for"';
    access_log /var/log/nginx/access.log main;

    # performance
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;

    # timeouts
    keepalive_timeout 65;

    # response types
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # size limits
    client_max_body_size 10M;

    # compression
    gzip on;
    gzip_vary on;
    gzip_comp_level 6;
    gzip_types
        application/json
        application/javascript
        application/x-javascript
        application/xml
        application/xml+rss
        application/atom+xml
        text/css
        text/xml
        text/plain
        text/html
        text/javascript
        text/less
        image/svg+xml;
    gzip_min_length 1000;
    gzip_disable "msie6";
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_proxied expired no-cache no-store private auth; # any

    # http2
    http2 on;
    http2_max_field_size 16k;
    http2_max_header_size 32k;
    http2_max_requests 1000;
    http2_max_concurrent_streams 128;

    # reverse proxy
    upstream cocktail-maker {
        server cocktail-maker:8000;
        # server host.docker.internal:8000;
    }


    server {
        listen 443 ssl;
        server_name cocktail-maker;

        ssl_certificate /etc/nginx/certs/cert.crt;
        ssl_certificate_key /etc/nginx/certs/priv.key;

        location / {
            if ($request_method = 'OPTIONS') {
                add_header Access-Control-Allow-Origin $cors_origin always;
                add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS, HEAD" always;
                add_header Access-Control-Allow-Headers "Authorization, Accept-Encoding, Origin, User-Agent, Cache-Control, Content-Type, Accept, Accept-Language, Content-Language" always;
                add_header Access-Control-Allow-Credentials "true" always;

                # preflight 요청 결과 캐시 시간 (초)
                add_header Access-Control-Max-Age "5" always;

                return 204;
            }

            proxy_pass http://cocktail-maker;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_set_header Host $host;
            proxy_set_header Forwarded $proxy_add_x_forwarded_for;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            ### CORS ###
            add_header Access-Control-Allow-Origin $cors_origin always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS, HEAD" always;
            add_header Access-Control-Allow-Headers "Authorization, Accept-Encoding, Origin, User-Agent, Cache-Control, Content-Type, Accept, Accept-Language, Content-Language" always;
            add_header Access-Control-Expose-Headers "X-Server-Version" always;

            # true: 쿠키, 인증 헤더 등 자격 증명 포함 요청 허용
            # false: 자격 증명 포함 요청 차단
            add_header Access-Control-Allow-Credentials "true" always;

            #### CSP ###
            add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' https://cdn.jsdelivr.net; style-src 'self' https://cdn.jsdelivr.net; img-src 'self' data: blob: https:; font-src 'self' data:; connect-src 'self'; media-src 'self' blob:; object-src 'none'; base-uri 'self'; form-action 'self'; frame-ancestors 'none';" always;

            # max-age=숫자 - HTTPS 강제 기간 (초)
            # includeSubDomains - 서브도메인 포함 (선택)
            # preload - 브라우저 preload 리스트 포함 (선택)
            add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

            # no-referrer - 리퍼러 전송 안함
            # no-referrer-when-downgrade - HTTPS→HTTP일 때만 차단
            # origin - 오리진만 전송
            # origin-when-cross-origin - 크로스 오리진일 때 오리진만
            # same-origin - 같은 오리진일 때만 전체 URL
            # strict-origin - 프로토콜 다운그레이드시 차단
            # strict-origin-when-cross-origin - 안전한 크로스 오리진에서만 오리진
            # unsafe-url - 항상 전체 URL 전송
            add_header Referrer-Policy "strict-origin-when-cross-origin" always;

            # nosniff - MIME 타입 스니핑 방지
            add_header X-Content-Type-Options "nosniff" always;

            # DENY - 모든 프레임에서 로드 차단
            # SAMEORIGIN - 같은 오리진에서만 프레임 허용
            # ALLOW-FROM uri - 특정 URI에서만 허용 (비권장)
            add_header X-Frame-Options "DENY" always;

            # public - 모든 캐시에서 저장 가능
            # private - 브라우저 캐시에만 저장
            # no-cache - 재검증 후 사용
            # no-store - 캐시 저장 금지
            # max-age=숫자 - 캐시 유효 기간 (초)
            # must-revalidate - 만료 후 반드시 재검증
            add_header Cache-Control "private, max-age=10" always;

            # 0 - XSS 필터 비활성화 (권장)
            # 1 - XSS 필터 활성화
            # 1; mode=block - XSS 감지시 페이지 차단
            add_header X-XSS-Protection "0" always;

            # off - DNS 프리페치 비활성화
            # on - DNS 프리페치 활성화
            add_header X-DNS-Prefetch-Control "off" always;

            # none - crossdomain.xml 파일 무시
            # master-only - 마스터 정책 파일만 허용
            # by-content-type - 콘텐츠 타입별 허용
            # all - 모든 정책 파일 허용
            add_header X-Permitted-Cross-Domain-Policies "none" always;

            # noopen - IE에서 파일 직접 실행 방지
            add_header X-Download-Options "noopen" always;

            # ?1 - 오리진별 에이전트 클러스터링 활성화
            # ?0 - 비활성화
            add_header Origin-Agent-Cluster "?1" always;

            # same-site - 같은 사이트에서만 접근
            # same-origin - 같은 오리진에서만 접근
            # cross-origin - 크로스 오리진 접근 허용
            add_header Cross-Origin-Resource-Policy "cross-origin" always;

            # unsafe-none - 기본값, 팝업과 컨텍스트 공유
            # same-origin - 같은 오리진 팝업과만 컨텍스트 공유
            # same-origin-allow-popups - 팝업 생성은 허용하되 컨텍스트 분리
            add_header Cross-Origin-Opener-Policy "unsafe-none" always;

            # unsafe-none - 기본값, CORP 검사 안함
            # require-corp - 모든 리소스에 CORP 헤더 요구
            # credentialless - 자격 증명 없는 요청만 허용
            add_header Cross-Origin-Embedder-Policy "require-corp" always;

            # 여러 오리진을 동적으로 처리할 때, 요청 헤더에 따라 응답이 달라질 때
            # add_header Vary "Origin" always;
        }
    }
}